// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Y_regression_region_block_fast
List Y_regression_region_block_fast(arma::colvec& Y, arma::mat& M, arma::colvec& X, arma::mat& C, arma::uvec L_all, arma::uword num_region, Rcpp::List& region_idx, int n_mcmc, Rcpp::List& K, int stop_burnin, int start_joint, double lambda, arma::colvec target_accept_vec, double a, double b, Rcpp::List& init, arma::colvec step, int interval_step, int interval_thin, bool display_progress);
RcppExport SEXP _UnconfoundedBIMA_Y_regression_region_block_fast(SEXP YSEXP, SEXP MSEXP, SEXP XSEXP, SEXP CSEXP, SEXP L_allSEXP, SEXP num_regionSEXP, SEXP region_idxSEXP, SEXP n_mcmcSEXP, SEXP KSEXP, SEXP stop_burninSEXP, SEXP start_jointSEXP, SEXP lambdaSEXP, SEXP target_accept_vecSEXP, SEXP aSEXP, SEXP bSEXP, SEXP initSEXP, SEXP stepSEXP, SEXP interval_stepSEXP, SEXP interval_thinSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type L_all(L_allSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type num_region(num_regionSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type region_idx(region_idxSEXP);
    Rcpp::traits::input_parameter< int >::type n_mcmc(n_mcmcSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type stop_burnin(stop_burninSEXP);
    Rcpp::traits::input_parameter< int >::type start_joint(start_jointSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type target_accept_vec(target_accept_vecSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type init(initSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type step(stepSEXP);
    Rcpp::traits::input_parameter< int >::type interval_step(interval_stepSEXP);
    Rcpp::traits::input_parameter< int >::type interval_thin(interval_thinSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(Y_regression_region_block_fast(Y, M, X, C, L_all, num_region, region_idx, n_mcmc, K, stop_burnin, start_joint, lambda, target_accept_vec, a, b, init, step, interval_step, interval_thin, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// M_regression_GS
List M_regression_GS(Rcpp::List& data, Rcpp::List& init, Rcpp::List& region_idx_cpp, Rcpp::List& kernel, arma::uword n_mcmc, bool display_progress);
RcppExport SEXP _UnconfoundedBIMA_M_regression_GS(SEXP dataSEXP, SEXP initSEXP, SEXP region_idx_cppSEXP, SEXP kernelSEXP, SEXP n_mcmcSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type region_idx_cpp(region_idx_cppSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type n_mcmc(n_mcmcSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(M_regression_GS(data, init, region_idx_cpp, kernel, n_mcmc, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// M_regression_region_block
List M_regression_region_block(arma::mat& M, arma::colvec& X, arma::mat& C, arma::uvec L_all, arma::uword num_region, Rcpp::List& region_idx, int n_mcmc, Rcpp::List& K, int stop_burnin, double lambda, arma::colvec& target_accept_vec, Rcpp::List& init, int interval, arma::vec step, double a, double b, int interval_eta, int thinning, bool display_progress);
RcppExport SEXP _UnconfoundedBIMA_M_regression_region_block(SEXP MSEXP, SEXP XSEXP, SEXP CSEXP, SEXP L_allSEXP, SEXP num_regionSEXP, SEXP region_idxSEXP, SEXP n_mcmcSEXP, SEXP KSEXP, SEXP stop_burninSEXP, SEXP lambdaSEXP, SEXP target_accept_vecSEXP, SEXP initSEXP, SEXP intervalSEXP, SEXP stepSEXP, SEXP aSEXP, SEXP bSEXP, SEXP interval_etaSEXP, SEXP thinningSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type L_all(L_allSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type num_region(num_regionSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type region_idx(region_idxSEXP);
    Rcpp::traits::input_parameter< int >::type n_mcmc(n_mcmcSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type stop_burnin(stop_burninSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type target_accept_vec(target_accept_vecSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type init(initSEXP);
    Rcpp::traits::input_parameter< int >::type interval(intervalSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type step(stepSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type interval_eta(interval_etaSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(M_regression_region_block(M, X, C, L_all, num_region, region_idx, n_mcmc, K, stop_burnin, lambda, target_accept_vec, init, interval, step, a, b, interval_eta, thinning, display_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_UnconfoundedBIMA_Y_regression_region_block_fast", (DL_FUNC) &_UnconfoundedBIMA_Y_regression_region_block_fast, 20},
    {"_UnconfoundedBIMA_M_regression_GS", (DL_FUNC) &_UnconfoundedBIMA_M_regression_GS, 6},
    {"_UnconfoundedBIMA_M_regression_region_block", (DL_FUNC) &_UnconfoundedBIMA_M_regression_region_block, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_UnconfoundedBIMA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
